name: Cartographer CI

on:
  push:
    branches: [ main, develop, monorepo-migration ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20'
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: '0'

jobs:
  build-and-test:
    name: Build & Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: ['20', '22']
      fail-fast: false
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Prepare workspace directories
      run: mkdir -p tmp
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9.0.0
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Install Playwright browsers
      run: pnpm --filter @cf/cartographer exec playwright install --with-deps chromium
    
    - name: Build all packages (Turbo)
      run: pnpm build
    
    # Run tests with Vitest
    - name: Run tests
      run: |
        echo "Running tests with Vitest..."
        pnpm test --filter @cf/cartographer 2>&1 | tee tmp/test-output.txt || true
        
        # Extract test counts from Vitest output (Tests line, not Test Files)
        PASSED=$(grep -oP 'Tests\s+\K\d+(?=\s+passed)' tmp/test-output.txt | tail -1 || echo "0")
        FAILED=$(grep -oP 'Tests.*\K\d+(?=\s+failed)' tmp/test-output.txt | tail -1 || echo "0")
        TOTAL=$((PASSED + FAILED))
        
        # Ensure variables are not empty
        PASSED=${PASSED:-0}
        FAILED=${FAILED:-0}
        TOTAL=${TOTAL:-0}
        
        echo "TEST_TOTAL=$TOTAL" >> $GITHUB_ENV
        echo "TEST_PASSED=$PASSED" >> $GITHUB_ENV
        echo "TEST_FAILED=$FAILED" >> $GITHUB_ENV
        
        echo "Tests: $PASSED passed, $FAILED failed out of $TOTAL total"
        
        # Exit with error if tests failed
        if [ "$FAILED" -gt "0" ]; then
          echo "::error::$FAILED tests failed"
          exit 1
        fi
    
    # Run performance benchmark
    - name: Performance Benchmark
      run: |
        echo "Running performance benchmark..."
        node packages/cartographer/dist/cli/index.js crawl \
          --seeds https://example.com \
          --out tmp/benchmark-test.atls \
          --maxPages 10 \
          --quiet
      continue-on-error: true
      timeout-minutes: 5
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-node-${{ matrix.node-version }}
        path: |
          packages/cartographer/dist/
          tmp/test-output.txt
          tmp/benchmark-test.atls
        retention-days: 7
    
    - name: Test summary
      if: always()
      run: |
        echo "## Test Results 🧪" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Node.js:** ${{ matrix.node-version }}" >> $GITHUB_STEP_SUMMARY
        echo "**Package Manager:** pnpm 9.0.0" >> $GITHUB_STEP_SUMMARY
        echo "**Build System:** Turbo 2.0" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Metric | Value |" >> $GITHUB_STEP_SUMMARY
        echo "|--------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| Total Tests | ${TEST_TOTAL:-N/A} |" >> $GITHUB_STEP_SUMMARY
        echo "| ✅ Passed | ${TEST_PASSED:-N/A} |" >> $GITHUB_STEP_SUMMARY
        echo "| ❌ Failed | ${TEST_FAILED:-N/A} |" >> $GITHUB_STEP_SUMMARY
        echo "| Build Status | ✅ Success |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📦 [Download Test Artifacts](../actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY

  validate-archives:
    name: Validate Atlas Archives
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Prepare workspace directories
      run: mkdir -p tmp
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9.0.0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Install Playwright browsers
      run: pnpm --filter @cf/cartographer exec playwright install --with-deps chromium

    - name: Build
      run: pnpm build
    
    - name: Generate control archive (crawler-test.com)
      run: |
        echo "Running control crawl against crawler-test.com..."
        node packages/cartographer/dist/cli/index.js crawl \
          --seeds https://crawler-test.com/ \
          --out tmp/crawler-test-control.atls \
          --mode prerender \
          --maxPages 25 \
          --maxDepth 3 \
          --quiet
      timeout-minutes: 10

    - name: Validate control archive
      run: |
        echo "Validating control Atlas archive..."
        node packages/cartographer/dist/cli/index.js validate --atls tmp/crawler-test-control.atls
